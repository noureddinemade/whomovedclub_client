{"version":3,"sources":["assets/js/Layout/Player.js","assets/js/Transfers.js","assets/js/Filters/League.js","assets/js/Filters/Team.js","assets/js/Layout/Info.js","assets/js/Layout/Footer.js","assets/js/Layout/NavFilter.js","assets/js/Layout/Navigation.js","assets/js/App.js","serviceWorker.js","index.js"],"names":["Player","t","type","name","includes","replace","linkIn","teamIn","linkOut","teamOut","className","to","transferDate","Transfers","transfers","length","map","i","key","LeagueTransfers","filter","useParams","league","results","transfer","TeamTransfers","team","direction","Info","lastUpdated","Footer","href","target","rel","NavFilter","tag","link","exact","leagues","Navigation","links","l","App","props","state","loading","current","players","result","p","fetch","dataURL","json","response","sort","a","b","Date","isDuplicate","push","this","setState","getData","path","League","Team","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.454b52ed.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nconst howMuch = type => {\n\n    if (!type || type === 'Loan' || type === 'N/A') {\n\n        return false;\n\n    }\n\n    return true;\n\n}\n\nconst Player = t => {\n\n    const name      = t.name.includes('&apos;') ? t.name.replace('&apos;', \"'\") : t.name;\n    const linkIn    = '/team/in/' + t.teamIn.replace(/ /g, '-');\n    const linkOut   = '/team/out/' + t.teamOut.replace(/ /g, '-');\n\n    return (\n\n        <div className=\"player\">\n\n            <p> \n                <span className=\"name\">{ name }</span> was {t.type === 'Loan' ? 'loaned' : 'transferred'} to <Link to={linkIn} className=\"to\">{t.teamIn}</Link> from <Link to={linkOut} className=\"from\">{t.teamOut}</Link> <span className=\"date\"><Moment to={ t.transferDate } /></span>{ howMuch(t.type) ? <span className=\"cost\"> for {t.type.replace(' ', '')}.</span> : '.' }\n            </p>\n\n        </div>\n\n    )\n\n}\n\nexport default Player;","import React from 'react';\nimport Player from './Layout/Player';\n\nconst Transfers = ({ transfers }) => {\n\n    return transfers.length > 0\n        ? transfers.map((t,i) => <Player {...t} key={i} /> )\n        : <p className=\"notice\">No transfers found in the last 60 days.</p>\n\n}\n\nexport default Transfers;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Transfers from '../Transfers';\n\nconst LeagueTransfers = ({ transfers }) => {\n\n    let { league } = useParams();\n    let filter = league.replace(/-/g, ' ');\n\n    let results = transfers.filter(transfer => transfer.league === filter);\n\n    return (\n        <div>\n\n            <p className=\"status in\">{results.length > 1 ? `${results.length} transfers` : `${results.length} transfer`} in the last 60 days.</p>\n\n            <Transfers transfers={results} />\n\n        </div>\n\n    );\n\n}\n\nexport default LeagueTransfers;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Transfers from '../Transfers';\n\nconst TeamTransfers = ({ transfers }) => {\n\n    let { team, direction } = useParams();\n    let filter = team.replace(/-/g, ' ');\n    let results;\n\n    direction === 'in' ? results = transfers.filter(transfer => transfer.teamIn === filter)\n    : direction === 'out' ? results = transfers.filter(transfer => transfer.teamOut === filter)\n    : results = transfers;\n\n    return (\n\n        <div>\n\n            <p className={`status ${direction === 'in' ? 'in' : direction === 'out' ? 'out' : '' }`}>{results.length > 1 ? `${results.length} players have` : `${results.length} player has`} { direction === 'in' ? 'moved to' : 'left'} { filter } in the last 60 days.</p>\n\n            <Transfers transfers={results} />\n\n        </div>\n\n    )\n\n}\n\nexport default TeamTransfers;","import React from 'react';\nimport Moment from 'react-moment';\n\nconst Info = ({ lastUpdated }) => {\n\n    return (\n\n        <section className=\"info\">\n\n            <h1>\n                <span>Who</span><span>moved</span>.club\n            </h1>\n\n            { lastUpdated !== null ? <p className=\"small\">Last updated <Moment to={ lastUpdated } /></p> : '' }\n\n        </section>\n\n    )\n\n};\n\nexport default Info;","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n\n        <footer>\n            <ul>\n                <li>\n                    View on <a href=\"https://github.com/noureddinemade/whomovedclub\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n                </li>\n                <li>&copy; <a href=\"https://noureddine.biz\" target=\"_blank\" rel=\"noopener noreferrer\">Noureddine</a> made this.</li>\n            </ul>\n        </footer>\n\n    )\n\n};\n\nexport default Footer;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavFilter = ({ name, tag, transfers }) => {\n\n    const link      = name.replace(/ /g, '-')\n    const filter    = transfers.filter(transfer => transfer.league === name);\n\n    return (\n\n        <li>\n            <NavLink \n                exact to={`/league/${link}`}\n                className={ filter.length === 0 ? `disabled ${tag}` : tag }\n            >\n\n                <span className=\"label\">{ name }</span>\n\n            </NavLink>\n        </li>\n\n    )\n\n}\n\nexport default NavFilter;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport NavFilter from './NavFilter';\n\nconst leagues = [\n    {\n        name: 'Premier League',\n        tag: 'eng'\n    },\n    {\n        name: 'La Liga',\n        tag: 'spa'\n    },\n    {\n        name: 'Serie A',\n        tag: 'ita'\n    },\n    {\n        name: 'Bundesliga',\n        tag: 'ger'\n    },\n    {\n        name: 'Ligue 1',\n        tag: 'fra'\n    }\n]\n\nconst Navigation = ({ transfers }) => {\n\n    const links = leagues.map((l,i) => <NavFilter {...l} transfers={transfers} key={i} />)\n\n    return (\n\n        <nav>\n\n            <ul>\n\n                <li>\n                    <NavLink exact to=\"/\" className=\"all\">\n                        <span className=\"label\">All</span>\n                    </NavLink>\n                </li>\n\n                { links }\n\n            </ul>\n\n        </nav>\n\n    )\n\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Transfers from './Transfers';\nimport League from './Filters/League';\nimport Team from './Filters/Team';\nimport Info from './Layout/Info';\nimport Footer from './Layout/Footer';\nimport Navigation from './Layout/Navigation';\n\n\nclass App extends Component {\n\n    constructor(props) {\n\n        super(props)\n\n        this.state = {\n\n            transfers: [],\n            lastUpdated: '',\n            loading: true\n\n        };\n        \n    };\n\n    //\n\n    isDuplicate (current, players) {\n\n        let result;\n\n        // eslint-disable-next-line\n        players.map(p => {\n\n            if (p.name === current.name) {\n\n                result = true;\n\n            }\n            \n        });\n\n        return result;\n\n    }\n\n    //\n\n    async getData () {\n\n        let transfers = [];\n\n        try {\n\n            const dataURL   = await fetch('/api/transfers');\n            let response    = await dataURL.json();\n\n            response = await response.sort((a,b) => new Date(b.transferDate) - new Date(a.transferDate))\n            \n            // eslint-disable-next-line\n            await response.map(p => {\n\n                const duplicate = this.isDuplicate(p, transfers)\n\n                if (!duplicate && p.name !== 'Data not available') {\n\n                    transfers.push(p);\n\n                } \n\n            })\n\n            const lastUpdated = transfers.length > 0 ? transfers[0].lastUpdated : null; \n\n            this.setState({\n                transfers: transfers,\n                lastUpdated: lastUpdated,\n                loading: false\n            })\n\n        } catch(error) {\n\n            return error;\n\n        }\n\n    }\n\n    //\n\n    componentDidMount() {\n\n        this.getData();\n\n\n    }\n\n    //\n\n    render() {\n\n        if (!this.state.loading) {\n\n            return (\n\n                <Router>\n\n                    <main>\n\n                        <Info lastUpdated={this.state.lastUpdated} />\n\n                        <section className=\"content\">\n\n                            <Navigation {...this.state} />\n\n                            <div className=\"transfers\">\n\n                                <Switch>\n\n                                    <Route exact path=\"/\">\n\n                                        <p className=\"status in\">{this.state.transfers.length > 1 ? `${this.state.transfers.length} transfers` : `${this.state.transfers.length} transfer`} transfers in the last 60 days.</p>\n\n                                        <Transfers transfers={this.state.transfers} />\n\n                                    </Route>\n\n                                    <Route path=\"/league/:league\">\n\n                                        <League transfers={this.state.transfers} />\n\n                                    </Route>\n\n                                    <Route path=\"/team/:direction/:team\">\n\n                                        <Team transfers={this.state.transfers} />\n\n                                    </Route>\n\n                                </Switch>\n\n                            </div>\n\n                        </section>\n\n                        <Footer />\n\n                    </main>  \n\n                </Router>\n\n            )\n\n        } else {\n\n            return <div className=\"loading\"><p>Loading...</p></div>\n\n        }\n\n    };\n\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './assets/css/main.css';\nimport App from './assets/js/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}